# Makefile.in for pwol
#
# @configure_input@


# Some 'make' variants does not include CPPFLAGS when compiling, some do
.c.o:
	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<

@SET_MAKE@

srcdir =	@srcdir@
VPATH =		@srcdir@

DESTDIR =

prefix =	@prefix@
exec_prefix =	@exec_prefix@
datarootdir =	@datarootdir@
sysconfdir =    @sysconfdir@

bindir =	@bindir@
mandir =	@mandir@
man1dir =	${mandir}/man1
man5dir =	${mandir}/man5
man8dir =	${mandir}/man8

CC =		@CC@
INSTALL =	@INSTALL@
TAR = 		tar

PACKAGE =	@PACKAGE_TARNAME@
VERSION =	@PACKAGE_VERSION@

CPPFLAGS =	@CPPFLAGS@ -I. -I${srcdir} -DPATH_CONFIG="\"$(sysconfdir)/pwol.conf\""
CFLAGS =	@CFLAGS@ -Wall
LDFLAGS =	@LDFLAGS@
LIBS =		@LIBS@

VALGRIND =	valgrind
VALGRINDFLAGS =	--leak-check=full --track-origins=yes --error-exitcode=1 # --show-leak-kinds=all 

BINS =		pwol
OBJS =		pwol.o

all: $(BINS) Makefile

Makefile: Makefile.in config.status
	./config.status

config.h: config.h.in config.status
	./config.status

pwol.o: 	pwol.c

pwol: $(OBJS)
	$(CC) $(LDFLAGS) -o pwol $(OBJS) $(LIBS)

# Clean targets
maintainer-clean:	distclean
	rm -f configure config.h.in

distclean:		clean
	rm -fr config.status config.log stamp-h1 .deps autom4te.cache Makefile config.h *.tar.gz

clean mostlyclean:
	-rm -f *~ \#* *.o $(BINS) core *.core vgcore.*


# Git targets
push: 	distclean
	git add -A && git commit -a && git push

pull:
	git pull


# Install targets
install-all install:  install-bin install-man install-conf

install-bin: $(BINS)
	$(INSTALL) -d $(DESTDIR)$(bindir)
	$(INSTALL) -c $(BINS) $(DESTDIR)$(bindir)

install-man:  pwol.1 pwol.conf.5
	$(INSTALL) -d "$(DESTDIR)$(man1dir)"
	$(INSTALL) -c -m 644 pwol.1 "$(DESTDIR)$(man1dir)" && \
	  gzip -f "$(DESTDIR)$(man1dir)/pwol.1"
	$(INSTALL) -d "$(DESTDIR)$(man5dir)"
	$(INSTALL) -c -m 644 pwol.conf.5 "$(DESTDIR)$(man5dir)" && \
	  gzip -f "$(DESTDIR)$(man5dir)/pwol.conf.5"

install-conf: pwol.conf
	$(INSTALL) -c -m 644 pwol.conf "$(DESTDIR)$(sysconfdir)/pwol.conf.sample"


uninstall-all uninstall: uninstall-bin uninstall-man

uninstall-bin:
	rm -f "$(DESTDIR)$(bindir)/pwol"

uninstall-man:
	rm -f "$(DESTDIR)$(man1dir)/pwol.1.gz" "$(DESTDIR)$(man1dir)/pwol.1"
	rm -f "$(DESTDIR)$(man5dir)/pwol.conf.5.gz" "$(DESTDIR)$(man5dir)/pwol.conf.5"
	rm -f "$(DESTDIR)$(sysconfdir)/pwol.conf.sample"


# Check targets
check:
	@echo "Nothing to check for now."


DISTCHECKDIR=/tmp/distcheck-$(PACKAGE)-$(VERSION)

distcheck: $(PACKAGE)-$(VERSION).tar.gz
	@if test -d "$(DISTCHECKDIR)"; then \
	  chmod -R +w "$(DISTCHECKDIR)" && rm -fr "$(DISTCHECKDIR)"; \
	fi;
	mkdir -p "$(DISTCHECKDIR)" && \
	  gunzip <"$(PACKAGE)-$(VERSION).tar.gz" | \
	    (cd "$(DISTCHECKDIR)" && $(TAR) xf - && \
	     chmod -R -w "$(PACKAGE)-$(VERSION)" && \
	     mkdir b && cd b && ../$(PACKAGE)-$(VERSION)/configure && \
	     $(MAKE) && $(MAKE) -s check) && echo "*** distcheck: OK"
	@chmod -R +w "$(DISTCHECKDIR)" && rm -fr "$(DISTCHECKDIR)";


DISTDIR=/tmp/build-$(PACKAGE)-$(VERSION)

dist:	$(PACKAGE)-$(VERSION).tar.gz

$(PACKAGE)-$(VERSION).tar.gz: Makefile
	rm -fr "$(DISTDIR)" && mkdir -p "$(DISTDIR)/$(PACKAGE)-$(VERSION)" && \
	  cp -r * "$(DISTDIR)/$(PACKAGE)-$(VERSION)" && \
	  (cd "$(DISTDIR)/$(PACKAGE)-$(VERSION)" && $(MAKE) distclean)
	(cd "$(DISTDIR)" && $(TAR) cvf - "$(PACKAGE)-$(VERSION)") | gzip >"$(PACKAGE)-$(VERSION)".tar.gz
	echo rm -fr "$(DISTDIR)"
	@echo ""
	@echo "*** $(PACKAGE)-$(VERSION).tar.gz created"

